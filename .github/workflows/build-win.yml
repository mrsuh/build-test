name: Build Qt App (Windows x86_64)

on:
  push:
    branches: [ main ]

env:
  APP_NAME: MyQtApp
  QT_VERSION: "6.8.3"

  # qtbase
  QTBASE_SRC: ${{ github.workspace }}/dependencies/qtbase
  QTBASE_BUILD: ${{ github.workspace }}/dependencies/qtbase/build
  QTBASE_INSTALL: ${{ github.workspace }}/dependencies/qtbase/install

  # qttools (для windeployqt)
  QTTOOLS_SRC: ${{ github.workspace }}/dependencies/qttools
  QTTOOLS_BUILD: ${{ github.workspace }}/dependencies/qttools/build
  QTTOOLS_INSTALL: ${{ github.workspace }}/dependencies/qttools/install

  # PoDoFo
  PODOFO_SRC: ${{ github.workspace }}/dependencies/podofo
  PODOFO_BUILD: ${{ github.workspace }}/dependencies/podofo/build
  PODOFO_INSTALL: ${{ github.workspace }}/dependencies/podofo/install

jobs:
  windows-x64:
    name: Windows x86_64
    runs-on: windows-2022
    timeout-minutes: 75

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install tools (Ninja, 7zip, Git)
        shell: pwsh
        run: |
          choco install -y ninja 7zip git
          ninja --version
          7z

      # ---------- Qt: qtbase ----------
      - name: Cache qtbase install
        id: cache-qt-base
        uses: actions/cache@v4
        with:
          path: ${{ env.QTBASE_INSTALL }}
          key: qt-base-${{ runner.os }}-x64-${{ env.QT_VERSION }}

      - name: Checkout qtbase sources
        if: steps.cache-qt-base.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: qt/qtbase
          path: dependencies/qtbase
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qtbase
        if: steps.cache-qt-base.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          cmake -S "${env:QTBASE_SRC}" -B "${env:QTBASE_BUILD}" -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="${env:QTBASE_INSTALL}" `
            -DQT_BUILD_EXAMPLES=OFF `
            -DQT_BUILD_TESTS=OFF
          cmake --build "${env:QTBASE_BUILD}" --parallel
          cmake --install "${env:QTBASE_BUILD}"

      # ---------- Qt: qttools (для windeployqt) ----------
      - name: Cache qttools install
        id: cache-qt-tools
        uses: actions/cache@v4
        with:
          path: ${{ env.QTTOOLS_INSTALL }}
          key: qt-tools-${{ runner.os }}-x64-${{ env.QT_VERSION }}

      - name: Checkout qttools sources
        if: steps.cache-qt-tools.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: qt/qttools
          path: dependencies/qttools
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qttools
        if: steps.cache-qt-tools.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          cmake -S "${env:QTTOOLS_SRC}" -B "${env:QTTOOLS_BUILD}" -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="${env:QTTOOLS_INSTALL}" `
            -DCMAKE_PREFIX_PATH="${env:QTBASE_INSTALL}" `
            -DQT_BUILD_EXAMPLES=OFF `
            -DQT_BUILD_TESTS=OFF
          cmake --build "${env:QTTOOLS_BUILD}" --parallel
          cmake --install "${env:QTTOOLS_BUILD}"
