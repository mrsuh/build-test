name: Build Qt App (Linux x64)

on:
  push:
    branches: [ main ]

env:
  APP_NAME: MyQtApp
  QT_VERSION: "6.8.3"

jobs:
  linux-x64:
    name: Linux x64
    runs-on: ubuntu-22.04
    timeout-minutes: 35

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps (APT)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y \
            libfontconfig1-dev \
            libfreetype-dev \
            libgtk-3-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxcb-cursor-dev \
            libxcb-glx0-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-keysyms1-dev \
            libxcb-randr0-dev \
            libxcb-render-util0-dev \
            libxcb-shape0-dev \
            libxcb-shm0-dev \
            libxcb-sync-dev \
            libxcb-util-dev \
            libxcb-xfixes0-dev \
            libxcb-xkb-dev \
            libxcb1-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libxrender-dev

      - name: Install build deps 2 (APT)
        run: |
          set -euo pipefail          
          sudo apt-get install -y \
            mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libglvnd-dev \
            libegl1-mesa-dev libgles2-mesa-dev libgbm-dev libdrm-dev

      - name: Install build deps 3 (APT)
        run: |
          set -euo pipefail          
          sudo apt-get install -y \
            build-essential ninja-build cmake git curl file python3 pkg-config \
            libfontconfig1-dev libfreetype6-dev libharfbuzz-dev \
            libjpeg-turbo8-dev libpng-dev libtiff-dev zlib1g-dev \
            libxml2-dev libssl-dev libicu-dev libglib2.0-dev \
            patchelf imagemagick                      

      # ---------- Qt: qtbase ----------
      - name: Cache Qt base
        id: cache-qt-base
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/dependencies/qtbase
          key: qt-base-${{ runner.os }}-x64-${{ env.QT_VERSION }}

      - name: Checkout Qt base repo
        if: steps.cache-qt-base.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: qt/qtbase
          path: dependencies/qtbase
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qtbase
        if: steps.cache-qt-base.outputs.cache-hit != 'true'
        run: |
          set -euo pipefail
          SRC="${GITHUB_WORKSPACE}/dependencies/qtbase"
          BUILD="${GITHUB_WORKSPACE}/dependencies/qtbase/build"
          PREFIX="${GITHUB_WORKSPACE}/dependencies/qtbase/install"          
          cmake -S "$SRC" -B "$BUILD" -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$PREFIX" \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF \
            -DQT_FEATURE_opengl_desktop=ON \
            -DQT_FEATURE_opengles2=OFF \
            -DOpenGL_GL_PREFERENCE=GLVND \
            -DQT_GENERATE_SBOM=OFF
          
          cmake --build "$BUILD" --parallel
          cmake --install "$BUILD"

      # ---------- Qt: qttools ----------
      - name: Cache Qt tools
        id: cache-qt-tools
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/dependencies/qttools
          key: qt-tools-${{ runner.os }}-x64-${{ env.QT_VERSION }}

      - name: Checkout Qt tools repo
        if: steps.cache-qt-tools.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: qt/qttools
          path: dependencies/qttools
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qttools
        if: steps.cache-qt-tools.outputs.cache-hit != 'true'
        run: |
          set -euo pipefail
          SRC="${GITHUB_WORKSPACE}/dependencies/qttools"
          BUILD="${GITHUB_WORKSPACE}/dependencies/qttools/build"
          PREFIX="${GITHUB_WORKSPACE}/dependencies/qttools/install"
          cmake -S "$SRC" -B "$BUILD" -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$PREFIX" \
            -DCMAKE_PREFIX_PATH="${GITHUB_WORKSPACE}/dependencies/qtbase/install" \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF \
            -DCMAKE_DISABLE_FIND_PACKAGE_Clang=ON \
            -DCMAKE_DISABLE_FIND_PACKAGE_LLVM=ON \
            -DQT_FEATURE_clang=OFF \
            -DQT_FEATURE_clangcpp=OFF \
            -DQT_GENERATE_SBOM=OFF
          cmake --build "$BUILD" --parallel
          cmake --install "$BUILD"