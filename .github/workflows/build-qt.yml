name: Build Qt App (macOS arm64)

on:
  push:
    branches: [ main ]    

env:  
  APP_NAME: MyQtApp
  QT_VERSION: "6.8.3"

jobs:
  macos-arm64:
    name: macOS arm64
    runs-on: macos-14
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: desktop
          arch: clang_64
          cache: true

      - name: Configure (CMake)
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_PREFIX_PATH="${QT_ROOT_DIR};${GITHUB_WORKSPACE}/dependencies/podofo/install"

      - name: Build (CMake)
        run: cmake --build build --config Release --parallel --target all

      - name: Bundle Qt (macdeployqt)
        shell: bash
        run: |
          set -euo pipefail
          macdeployqt "build/${APP_NAME}.app" -always-overwrite -verbose=3

      - name: Bundle non-Qt dylibs (dylibbundler)
        shell: bash
        run: |
          set -euo pipefail
          
          brew install dylibbundler
          
          APP_PATH="build/${APP_NAME}.app"
          BIN="$APP_PATH/Contents/MacOS/${APP_NAME}"
          FRAMEWORKS="$APP_PATH/Contents/Frameworks"
          mkdir -p "$FRAMEWORKS"                
          
          dylibbundler -od -b -x "$BIN" -d "$FRAMEWORKS" -p @executable_path/../Frameworks \
              -s "${GITHUB_WORKSPACE}/dependencies/podofo/install/lib" \
              -s "$(brew --prefix)/lib" \
              -s "$(brew --prefix fontconfig)/lib" \
              -s "$(brew --prefix freetype)/lib" \
              -s "$(brew --prefix libpng)/lib" \
              -s "$(brew --prefix libtiff)/lib" \
              -s "$(brew --prefix jpeg-turbo)/lib" \
              -s "$(brew --prefix libxml2)/lib" \
              -s "$(brew --prefix openssl@3)/lib"
          
          macdeployqt "$APP_PATH" -always-overwrite -verbose=2

      - name: Ad-hoc codesign
        shell: bash
        run: |
          APP_PATH="build/${APP_NAME}.app"
          codesign --force -s - --deep --options runtime "$APP_PATH"
          codesign -vv "$APP_PATH" || true

      - name: Package DMG
        shell: bash
        run: |
          set -euo pipefail
          APP_PATH="build/${APP_NAME}.app"
          macdeployqt "$APP_PATH" -dmg -always-overwrite -verbose=3
          echo "DMG_PATH=build/${APP_NAME}.dmg" >> $GITHUB_ENV

      - name: Upload artifact (DMG)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos-arm64-dmg
          path: ${{ env.DMG_PATH }}
          if-no-files-found: error
          retention-days: 14
  

