name: Build Qt App (macOS arm64)

on:
  push:
    branches: [ main ]    

env:  
  APP_NAME: MyQtApp
  QT_VERSION: "6.8.3"

jobs:
  macos-arm64:
    name: macOS arm64
    runs-on: macos-14
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps (Qt & PoDoFo)
        run: brew install ninja python pkg-config fontconfig freetype openssl libxml2 jpeg-turbo libpng libtiff

      - name: Checkout dependency repo
        uses: actions/checkout@v4
        with:
          repository: qt/qtbase
          path: dependencies/qtbase
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qtbase
        run: |
          set -euo pipefail
          SRC="${GITHUB_WORKSPACE}/dependencies/qtbase"
          BUILD="${GITHUB_WORKSPACE}/dependencies/qtbase/build"
          PREFIX="$GITHUB_WORKSPACE/dependencies/qtbase/install"

          cmake -S "$SRC" -B "$BUILD" -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$PREFIX" \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF

          cmake --build "$BUILD" --parallel
          cmake --install "$BUILD"

      - name: Checkout dependency repo
        uses: actions/checkout@v4
        with:
          repository: qt/qttools
          path: dependencies/qttools
          ref: v${{ env.QT_VERSION }}
          submodules: recursive
          fetch-depth: 1

      - name: Build & Install qttools
        run: |
          set -euo pipefail
          SRC="${GITHUB_WORKSPACE}/dependencies/qttools"
          BUILD="${GITHUB_WORKSPACE}/dependencies/qttools/build"
          PREFIX="${GITHUB_WORKSPACE}/dependencies/qttools/install"

          cmake -S "$SRC" -B "$BUILD" -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/dependencies/qtbase/install" \
            -DCMAKE_PREFIX_PATH="$PREFIX" \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DQT_BUILD_EXAMPLES=OFF \
            -DQT_BUILD_TESTS=OFF

          cmake --build "$BUILD" --parallel
          cmake --install "$BUILD"          

      - name: Setup Qt env vars
        run: |
          echo "${GITHUB_WORKSPACE}/dependencies/qtbase/install/bin" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/dependencies/qttools/install/bin" >> $GITHUB_PATH

      - name: Checkout dependency repo
        uses: actions/checkout@v4
        with:
          repository: podofo/podofo
          path: dependencies/podofo
          submodules: recursive
          fetch-depth: 1

      - name: Install podofo
        run: |
          set -euo pipefail
          cd dependencies/podofo
          mkdir build
          cd build
          cmake .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_OSX_ARCHITECTURES=arm64 \
              -DCMAKE_FIND_FRAMEWORK=NEVER \
              -DCMAKE_PREFIX_PATH="$(brew --prefix)" \
              -DFontconfig_INCLUDE_DIR="$(brew --prefix fontconfig)/include" \
              -DOPENSSL_ROOT_DIR="$(brew --prefix openssl@3)"
          cmake --build . --config Release
          cmake --install . --prefix "${GITHUB_WORKSPACE}/dependencies/podofo/install"             

      - name: Configure (CMake)
        run: |          
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="12.0" \
            -DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
            -DCMAKE_PREFIX_PATH="${GITHUB_WORKSPACE}/dependencies/qtbase/install;${GITHUB_WORKSPACE}/dependencies/podofo/install"

      - name: Build (CMake)
        run: cmake --build build --config Release --parallel --target all

      - name: Verify app (arch & libs)
        shell: bash
        run: |
          set -euo pipefail
          BIN="build/${APP_NAME}.app/Contents/MacOS/${APP_NAME}"
          lipo -archs "$BIN"
          otool -L "$BIN" || true

      - name: Package (DMG)
        shell: bash
        run: |      
          env
          set -euo pipefail
                  
          APP_PATH="build/${APP_NAME}.app"                
          
          macdeployqt "$APP_PATH" -always-overwrite
          
          brew install dylibbundler
          
          BIN="$APP_PATH/Contents/MacOS/${APP_NAME}"
          FRAMEWORKS="$APP_PATH/Contents/Frameworks"
          mkdir -p "$FRAMEWORKS"                
          
          dylibbundler -od -b -x "$BIN" -d "$FRAMEWORKS" -p @executable_path/../Frameworks \
              -s "${GITHUB_WORKSPACE}/dependencies/podofo/install/lib" \
              -s "$(brew --prefix)/lib" \
              -s "$(brew --prefix fontconfig)/lib" \
              -s "$(brew --prefix freetype)/lib" \
              -s "$(brew --prefix libpng)/lib" \
              -s "$(brew --prefix libtiff)/lib" \
              -s "$(brew --prefix jpeg-turbo)/lib" \
              -s "$(brew --prefix libxml2)/lib" \
              -s "$(brew --prefix openssl@3)/lib"

          codesign --force --deep --options runtime \
            --entitlements entitlements.plist \
            -s - "$APP_PATH"  
          
          macdeployqt "$APP_PATH" -dmg -always-overwrite        
         
          echo "DMG_PATH=build/${APP_NAME}.dmg" >> $GITHUB_ENV               

      - name: Upload artifact (DMG)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos-arm64-dmg
          path: ${{ env.DMG_PATH }}
          if-no-files-found: error
          retention-days: 14
  

