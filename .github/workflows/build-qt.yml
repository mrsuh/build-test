name: macOS Qt (arm64)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: macos-14
    env:
      QT_VERSION: 6.7.2
      QT_MODULE: clang_64
      BUILD_DIR: build
      APP_NAME: BuildTest

    steps:
      - uses: actions/checkout@v4

      - name: Install Python + aqtinstall
        run: |
          python3 -m pip install --upgrade pip
          pip3 install aqtinstall

      - name: Install CMake & Ninja
        uses: lukka/get-cmake@v3.29.2

      - name: Install Qt
        run: |
          aqt install-qt mac macos desktop $QT_VERSION $QT_MODULE -O $HOME/Qt
          echo "QT_DIR=$HOME/Qt/$QT_VERSION/$QT_MODULE" >> $GITHUB_ENV
          echo "$HOME/Qt/Tools/macos/bin" >> $GITHUB_PATH

      - name: Configure
        run: |
          cmake -S . -B $BUILD_DIR -G Ninja \
            -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=arm64

      - name: Build
        run: cmake --build $BUILD_DIR --parallel

      - name: Install (create .app in install dir)
        run: |
          cmake --install $BUILD_DIR --prefix "$PWD/package"

      - name: Find app
        id: findapp
        run: |
          APP_PATH=$(find "package" -name "${APP_NAME}.app" -maxdepth 3 | head -n1)
          if [ -z "$APP_PATH" ]; then echo "Bundle not found"; exit 1; fi
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "app_path=$APP_PATH" >> $GITHUB_OUTPUT

      - name: macdeployqt
        run: |
          MACDEPLOY=$(find "${HOME}/Qt" -name macdeployqt -type f | head -n1)
          "$MACDEPLOY" "${APP_PATH}" -verbose=2

      - name: Ad-hoc codesign
        run: |
          /usr/bin/codesign --force --deep -s - "${APP_PATH}"
          /usr/bin/codesign --verify --deep --strict "${APP_PATH}" || true

      - name: Zip app
        run: |
          cd "$(dirname "${APP_PATH}")"
          zip -r "${APP_NAME}-macos-arm64.zip" "$(basename "${APP_PATH}")"
          echo "ZIP_PATH=$(pwd)/${APP_NAME}-macos-arm64.zip" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macOS-arm64
          path: ${{ env.ZIP_PATH }}
          if-no-files-found: error
